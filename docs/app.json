[{"name":"app.R","content":"\n# Tutorial: https://hbctraining.github.io\n# RShiny App  obtido neste endere√ßo\n# \n# Executar estas linhas:\n# install.packages(\"archive\")\ninstall.packages(\"shinylive\")\n# install.packages(\"webr\")\n# num terminal: sudo apt install cmake\ninstall.packages(\"httpuv\")\nlibrary(shinylive)\nlibrary(httpuv)\n# Depois de criar a pasta \"docs\"\nshinylive::export(appdir = \"../2o_web_app_Shiny_publicar_em_GitHub_Pages/\", destdir = \"docs\")\n\nhttpuv::runStaticServer(\"docs/\", port = 8008)\n# \n# \ninstall.packages(\"shiny\")\ninstall.packages(\"DT\")\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(DT)\n\n# Define UI for application\nui <- fluidPage(\n  plotOutput(\"plot\",brush = \"plot_brush\"),\n  DTOutput(\"table\")\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output) {\n    output$plot <- renderPlot(\n      ggplot(mtcars)+\n        geom_point(aes(x=mpg,y=disp))\n    )\n    output$table <- renderDT({\n      brushedPoints(mtcars, input$plot_brush)\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"2o_web_app_Shiny_publicar_em_GitHub_Pages.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
