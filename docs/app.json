[{"name":"app.R","content":"\n# Tutorial: https://hbctraining.github.io\n# RShiny App  obtido neste endereço\n# \n# Executar estas linhas:\n# install.packages(\"archive\")\n# install.packages(\"shinylive\")\n# install.packages(\"webr\")\n# num terminal: sudo apt install cmake\n# install.packages(\"httpuv\")\nlibrary(shinylive)\nlibrary(httpuv)\n# Depois de criar a pasta \"docs\"\n# shinylive::export(appdir = \"../2o_web_app_Shiny_publicar_em_GitHub_Pages/\", destdir = \"docs\")\n\n# httpuv::runStaticServer(\"docs/\", port = 8008)\n\n# \n# \n# install.packages(\"shiny\")\n# install.packages(\"DT\")\nlibrary(shiny)\n# library(ggplot2)\n# library(DT)\n\n# # Define UI for application\n# ui <- fluidPage(\n#   plotOutput(\"plot\",brush = \"plot_brush\"),\n#   DTOutput(\"table\")\n# )\n# \n# # Define server logic required to draw a histogram\n# server <- function(input, output) {\n#     output$plot <- renderPlot(\n#       ggplot(mtcars)+\n#         geom_point(aes(x=mpg,y=disp))\n#     )\n#     output$table <- renderDT({\n#       brushedPoints(mtcars, input$plot_brush)\n#     })\n# }\n# \n# Projeto mais simples para fazer o teste do deploy\nui <- fluidPage(\"Olá, mundo!\")\n\nserver <- function(input, output, session) {\n}\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"2o_web_app_Shiny_publicar_em_GitHub_Pages.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
